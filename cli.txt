#-----------------------
# FILE CREATION
#-----------------------
touch file{1..5}.txt note{1..3}.md script{1..3}.py temp~ draft.temp
mkdir texts scripts notes others logs data

#-----------------------
# LISTING FILES
#-----------------------
ls                     # simple list
ls *.txt               # list only .txt files
ls -l                  # detailed list
tree                   # tree view

#-----------------------
# MOVING FILES
#-----------------------
mv *.txt texts/
mv *.md notes/
mv *.py scripts/
mv *.log logs/
mv *.csv data/
mv *~ others/

#-----------------------
# RENAMING FILES WITH LOOP
#-----------------------
idx=1
for file in *.txt; do
    mv "$file" "2025_09_24_$((idx++)).txt"
done

#-----------------------
# DELETING FILES
#-----------------------
rm temp~                # delete one file
rm *.bak                # delete multiple files
rm -rf tmp_folder/      # delete folder recursively

#-----------------------
# SYMLINKS
#-----------------------
ln -s target linkname          # create a symbolic link
ln -s /path/to/file shortcut   # link file to shortcut
ln -s /path/to/dir symlinkdir  # link directory

ls -l                          # shows -> for symlinks
readlink linkname              # show what a symlink points to
readlink -f linkname           # show absolute path target
unlink linkname                # delete a symlink (not the target)
rm linkname                    # also removes the symlink safely

# Common uses:
ln -s /mnt/storage/photos ~/Photos   # link storage/photos to home
ln -s /usr/share/fonts ~/.fonts      # make fonts visible in home
ln -s /etc/nginx/sites-available/mysite /etc/nginx/sites-enabled/

#-----------------------
# WILDCARDS & PATTERNS
#-----------------------
*        # all files
?.txt    # any single character followed by .txt
file{1..5}.txt   # brace expansion
*~       # backup/temp files

#-----------------------
# CHAINING COMMANDS
#-----------------------
command1 && command2       # run command2 only if command1 succeeds
command1 ; command2        # run command2 regardless of command1
command1 \
&& command2 \
&& command3              # backslash splits long commands across lines

#-----------------------
# NETWORK COMMANDS
#-----------------------
ip a                      # show all network interfaces and IPs
ip link                   # show interface status
ip link set eth0 up        # bring interface up
ip link set eth0 down      # bring interface down
ip addr add 192.168.1.10/24 dev eth0   # assign IP
ping 8.8.8.8               # test connection
curl ifconfig.me           # show external IP
sudo apt install net-tools # (Debian/Ubuntu) to restore 'ifconfig'
ifconfig                   # (legacy) show network info if net-tools installed

#-----------------------
# BLUETOOTH COMMANDS
#-----------------------
# Start bluetoothctl (interactive CLI tool)
bluetoothctl

# Within bluetoothctl:
power on                   # turn on the Bluetooth adapter
power off                  # turn off the adapter
agent on                    # enable pairing agent
scan on                     # start scanning for nearby devices
scan off                    # stop scanning
devices                     # list all known devices
paired-devices              # list paired devices
pair <MAC_ADDRESS>          # pair with a device
connect <MAC_ADDRESS>       # connect to a paired device
disconnect <MAC_ADDRESS>    # disconnect a device
trust <MAC_ADDRESS>         # mark device as trusted for automatic reconnection
remove <MAC_ADDRESS>        # remove/unpair a device
quit                        # exit bluetoothctl

# Quick helper commands outside bluetoothctl:
systemctl status bluetooth       # check Bluetooth service status
systemctl start bluetooth        # start Bluetooth service
systemctl stop bluetooth         # stop Bluetooth service
systemctl enable bluetooth       # enable Bluetooth service at boot
systemctl disable bluetooth      # disable Bluetooth service at boot
rfkill list                      # list all blocked/unblocked devices
rfkill unblock bluetooth         # unblock Bluetooth if soft-blocked

